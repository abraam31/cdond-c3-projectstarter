version: 2.1

commands:

  exit-pipeline:
    description: exit pipeline if job fails
    steps:
      - run:
          name: exit pipeline
          when: on_fail
          command: |
            exit 1

  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
        backendStack:
            type: string
            default: "udapeople-back-${CIRCLE_WORKFLOW_ID:0-7}"

        frontendStack:
            type: string
            default: "udapeople-front-${CIRCLE_WORKFLOW_ID:0-7}"
            
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name << parameters.backendStack >>
            aws cloudformation delete-stack --stack-name << parameters.frontendStack >>

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: "frontend-build4"
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install 
            npm run build
      - save_cache:
          paths: 
            - frontend/node_modules
          key: "frontend-build4"
      - exit-pipeline

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: "backend-build4"
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: 
            - backend/node_modules
          key: backend-build4
      - exit-pipeline

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: "frontend-build4"
      - run:
          name: Test front-end
          command: |
            cd frontend
            npm install
            npm run test
      - save_cache:
          paths: 
            - frontend/node_modules
          key: "frontend-build4"
      - exit-pipeline
          
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          key: "backend-build4"
      - run: 
            name: various commands 
            command: |
                ls
                pwd
                ls backend 
            
      - run:
          name: Back-end test
          command: |
            cd backend
            npm install
            npm run test
      - save_cache:
          paths: 
            - backend/node_modules
          key: backend-build3
      - exit-pipeline
            
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Frontend audit
          command: |
            cd backend
            npm audit --audit-level=critical
      - exit-pipeline

  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Back-end audit
          command: |
            cd backend
            npm audit --audit-level=critical
      - exit-pipeline


workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [test-backend]
      - scan-frontend:
          requires: [test-frontend]